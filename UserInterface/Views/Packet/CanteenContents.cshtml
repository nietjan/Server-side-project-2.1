@model IEnumerable<DomainModel.Packet>
@{

}
<div class="p-2">
    @* canteen list dropdown *@
    @await Component.InvokeAsync("CanteenList")
    <button class="button right-side">Register new packet</button>
    @foreach (DomainModel.Packet r in Model!) {
        <div class="container">
            <div class="row mt-4">
                <div class="col-lg-2 col-sm-12 p-0">
                    <img class="img-fluid" alt="packet image" src="https://media.istockphoto.com/id/1147544807/fr/vectoriel/pas-image-miniature-graphique-vectoriel.jpg?s=612x612&w=is&k=20&c=-RnzwVmgpowhd-C1iGQS30Sd5FrvKCXPxfsCSVR-HSg=">
                </div>
                <div class="col-lg-8 col-sm-12 p-0">
                    <h5>@r.name</h5>
                    <p class="my-2">@string.Format("€ {0:N2} Euro", r.price)</p>
                    <p class="my-2">@r.startPickup?.ToString("MMMM dd")</p>
                    <p class="my-2">@r.city - @r.canteen.location</p>
                    @if(r.reservedBy == null) {
                        <p class="my-2">Not reserved</p>
                    } else {
                        <p class="my-2">Reserved</p>
                    }
                </div>
                <div class="col-lg-2 col-sm-12 my-auto text-center p-0">
                    <button onclick="location.href='@Url.Action("Detail", "Packet", new {id = r.id})'" class="btn-default">Check</button>
                    @if (r.reservedBy == null) {
                        <button class="mx-2" onclick="location.href='@Url.Action("Update", "Packet", new {id = r.id})'" class="btn-default">Update</button>
                    }
                </div>
            </div>
        </div>
    }
</div>