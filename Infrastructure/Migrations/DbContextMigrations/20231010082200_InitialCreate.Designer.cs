// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations.DbContextMigrations
{
    [DbContext(typeof(PacketContext))]
    [Migration("20231010082200_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DomainModel.Canteen", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("city")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("servesHotMeals")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("canteen");
                });

            modelBuilder.Entity("DomainModel.CanteenStaffMember", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Canteenid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("securityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("staffNumber")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Canteenid");

                    b.ToTable("canteenStaffMembers");
                });

            modelBuilder.Entity("DomainModel.ExampleProductList", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("type")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("exampleProductLists");
                });

            modelBuilder.Entity("DomainModel.Packet", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("Canteenid")
                        .HasColumnType("int");

                    b.Property<int>("city")
                        .HasColumnType("int");

                    b.Property<bool>("eighteenUp")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("endPickup")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int?>("exampleProductListid")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("price")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("reservedByid")
                        .HasColumnType("int");

                    b.Property<DateTime?>("startPickup")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("typeOfMeal")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Canteenid");

                    b.HasIndex("exampleProductListid");

                    b.HasIndex("reservedByid");

                    b.ToTable("packets");
                });

            modelBuilder.Entity("DomainModel.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("ExampleProductListid")
                        .HasColumnType("int");

                    b.Property<bool>("alcoholic")
                        .HasColumnType("bit");

                    b.Property<string>("imageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ExampleProductListid");

                    b.ToTable("products");
                });

            modelBuilder.Entity("DomainModel.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("securityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("studentNumber")
                        .HasColumnType("int");

                    b.Property<int>("studyCity")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("DomainModel.CanteenStaffMember", b =>
                {
                    b.HasOne("DomainModel.Canteen", "Canteen")
                        .WithMany()
                        .HasForeignKey("Canteenid");

                    b.Navigation("Canteen");
                });

            modelBuilder.Entity("DomainModel.Packet", b =>
                {
                    b.HasOne("DomainModel.Canteen", "Canteen")
                        .WithMany("packetList")
                        .HasForeignKey("Canteenid");

                    b.HasOne("DomainModel.ExampleProductList", "exampleProductList")
                        .WithMany()
                        .HasForeignKey("exampleProductListid");

                    b.HasOne("DomainModel.Student", "reservedBy")
                        .WithMany("reservedPackets")
                        .HasForeignKey("reservedByid");

                    b.Navigation("Canteen");

                    b.Navigation("exampleProductList");

                    b.Navigation("reservedBy");
                });

            modelBuilder.Entity("DomainModel.Product", b =>
                {
                    b.HasOne("DomainModel.ExampleProductList", null)
                        .WithMany("list")
                        .HasForeignKey("ExampleProductListid");
                });

            modelBuilder.Entity("DomainModel.Canteen", b =>
                {
                    b.Navigation("packetList");
                });

            modelBuilder.Entity("DomainModel.ExampleProductList", b =>
                {
                    b.Navigation("list");
                });

            modelBuilder.Entity("DomainModel.Student", b =>
                {
                    b.Navigation("reservedPackets");
                });
#pragma warning restore 612, 618
        }
    }
}
